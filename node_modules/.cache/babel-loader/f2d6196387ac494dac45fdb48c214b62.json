{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar TypeWritter =\n/** @class */\nfunction () {\n  function TypeWritter() {\n    this.dummyQueue = [];\n    this.eventQueue = []; // this.initTaskQueue()\n  }\n\n  TypeWritter.prototype.restartTypeWriter = function () {\n    this.memoWord = this.nextWord;\n    this.eventQueue = this.nextWord ? this.nextWord.split('') : [];\n    this.erasing = false;\n    return '';\n  };\n  /**\n   * Main process function\n   * typing\n   *    |-- writing\n   *    |-- erasing\n   *    |-- restartWrite\n   *\n   * @returns\n   * @memberof TypeWritter\n   */\n\n\n  TypeWritter.prototype.typing = function () {\n    // earsing to last character, start write next word\n    if (this.erasing && !this.word) {\n      return this.restartTypeWriter();\n    } // earsing\n\n\n    if (this.erasing && this.word) {\n      return this.erase();\n    } // write end\n\n\n    if (this.word === this.memoWord) {\n      return this.word;\n    } // writing\n\n\n    var el = this.eventQueue.shift();\n    this.dummyQueue.push(el);\n    this.word = this.dummyQueue.join('');\n    return this.word;\n  };\n\n  TypeWritter.prototype.startTypeWord = function (str) {\n    this.erasing = true;\n    this.nextWord = str;\n    this.dummyQueue.pop();\n    this.word = this.dummyQueue.join('');\n    return this.word;\n  };\n\n  TypeWritter.prototype.erase = function () {\n    this.dummyQueue.pop();\n    this.word = this.dummyQueue.join('');\n    return this.word;\n  };\n\n  TypeWritter.prototype.rd = function () {\n    var r = Math.random();\n    return r > 0.1 || r < 0.07 ? this.rd() : r * 1000;\n  };\n\n  return TypeWritter;\n}();\n\nexports.default = TypeWritter;","map":{"version":3,"sources":["../src/typeWriter.ts"],"names":[],"mappings":";;;;;;AAAA,IAAA,WAAA;AAAA;AAAA,YAAA;AASE,WAAA,WAAA,GAAA;AAEE,SAAK,UAAL,GAAkB,EAAlB;AACA,SAAK,UAAL,GAAkB,EAAlB,CAHF,CAIE;AACD;;AAEM,EAAA,WAAA,CAAA,SAAA,CAAA,iBAAA,GAAP,YAAA;AACE,SAAK,QAAL,GAAgB,KAAK,QAArB;AACA,SAAK,UAAL,GAAkB,KAAK,QAAL,GAAgB,KAAK,QAAL,CAAc,KAAd,CAAoB,EAApB,CAAhB,GAA0C,EAA5D;AACA,SAAK,OAAL,GAAe,KAAf;AACA,WAAO,EAAP;AACD,GALM;AAOP;;;;;;;;;AASG;;;AACI,EAAA,WAAA,CAAA,SAAA,CAAA,MAAA,GAAP,YAAA;AACE;AACA,QAAI,KAAK,OAAL,IAAgB,CAAC,KAAK,IAA1B,EAAgC;AAC9B,aAAO,KAAK,iBAAL,EAAP;AACD,KAJH,CAKE;;;AACA,QAAI,KAAK,OAAL,IAAgB,KAAK,IAAzB,EAA+B;AAC7B,aAAO,KAAK,KAAL,EAAP;AACD,KARH,CASE;;;AACA,QAAI,KAAK,IAAL,KAAc,KAAK,QAAvB,EAAiC;AAC/B,aAAO,KAAK,IAAZ;AACD,KAZH,CAaE;;;AACA,QAAM,EAAE,GAAG,KAAK,UAAL,CAAgB,KAAhB,EAAX;AACA,SAAK,UAAL,CAAgB,IAAhB,CAAqB,EAArB;AACA,SAAK,IAAL,GAAY,KAAK,UAAL,CAAgB,IAAhB,CAAqB,EAArB,CAAZ;AACA,WAAO,KAAK,IAAZ;AACD,GAlBM;;AAoBA,EAAA,WAAA,CAAA,SAAA,CAAA,aAAA,GAAP,UAAqB,GAArB,EAAgC;AAC9B,SAAK,OAAL,GAAe,IAAf;AACA,SAAK,QAAL,GAAgB,GAAhB;AACA,SAAK,UAAL,CAAgB,GAAhB;AACA,SAAK,IAAL,GAAY,KAAK,UAAL,CAAgB,IAAhB,CAAqB,EAArB,CAAZ;AACA,WAAO,KAAK,IAAZ;AACD,GANM;;AAQA,EAAA,WAAA,CAAA,SAAA,CAAA,KAAA,GAAP,YAAA;AACE,SAAK,UAAL,CAAgB,GAAhB;AACA,SAAK,IAAL,GAAY,KAAK,UAAL,CAAgB,IAAhB,CAAqB,EAArB,CAAZ;AACA,WAAO,KAAK,IAAZ;AACD,GAJM;;AAMA,EAAA,WAAA,CAAA,SAAA,CAAA,EAAA,GAAP,YAAA;AACE,QAAM,CAAC,GAAG,IAAI,CAAC,MAAL,EAAV;AACA,WAAO,CAAC,GAAG,GAAJ,IAAW,CAAC,GAAG,IAAf,GACH,KAAK,EAAL,EADG,GAEH,CAAC,GAAG,IAFR;AAGD,GALM;;AAOT,SAAA,WAAA;AAAC,CA1ED,EAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TypeWritter = /** @class */ (function () {\n    function TypeWritter() {\n        this.dummyQueue = [];\n        this.eventQueue = [];\n        // this.initTaskQueue()\n    }\n    TypeWritter.prototype.restartTypeWriter = function () {\n        this.memoWord = this.nextWord;\n        this.eventQueue = this.nextWord ? this.nextWord.split('') : [];\n        this.erasing = false;\n        return '';\n    };\n    /**\n     * Main process function\n     * typing\n     *    |-- writing\n     *    |-- erasing\n     *    |-- restartWrite\n     *\n     * @returns\n     * @memberof TypeWritter\n     */\n    TypeWritter.prototype.typing = function () {\n        // earsing to last character, start write next word\n        if (this.erasing && !this.word) {\n            return this.restartTypeWriter();\n        }\n        // earsing\n        if (this.erasing && this.word) {\n            return this.erase();\n        }\n        // write end\n        if (this.word === this.memoWord) {\n            return this.word;\n        }\n        // writing\n        var el = this.eventQueue.shift();\n        this.dummyQueue.push(el);\n        this.word = this.dummyQueue.join('');\n        return this.word;\n    };\n    TypeWritter.prototype.startTypeWord = function (str) {\n        this.erasing = true;\n        this.nextWord = str;\n        this.dummyQueue.pop();\n        this.word = this.dummyQueue.join('');\n        return this.word;\n    };\n    TypeWritter.prototype.erase = function () {\n        this.dummyQueue.pop();\n        this.word = this.dummyQueue.join('');\n        return this.word;\n    };\n    TypeWritter.prototype.rd = function () {\n        var r = Math.random();\n        return r > 0.1 || r < 0.07\n            ? this.rd()\n            : r * 1000;\n    };\n    return TypeWritter;\n}());\nexports.default = TypeWritter;\n//# sourceMappingURL=typeWriter.js.map"]},"metadata":{},"sourceType":"script"}